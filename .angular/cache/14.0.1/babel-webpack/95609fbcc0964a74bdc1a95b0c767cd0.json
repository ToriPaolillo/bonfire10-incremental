{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Character } from '../models/character';\nimport { GridMatrix } from '../models/gridMatrix';\nlet DungeonComponent = class DungeonComponent {\n  constructor(gridMatrix) {\n    this.items = ['test', 'test2', 'test3', 'test4'];\n    this.levelNumberWidth = 6;\n    this.levelNumberHeight = 10;\n    this.character = new Character();\n    this.gridMatrix = new GridMatrix(this.character);\n    this.relevantTile = this.gridMatrix.getPlayerTile();\n  }\n\n  ngOnInit() {\n    let that = this;\n  }\n\n  tileHovered(hoveredTile) {\n    let playerTile = this.gridMatrix.getPlayerTile();\n\n    if (hoveredTile.hasInfo() && hoveredTile.explored) {\n      this.relevantTile = hoveredTile;\n    } else if (this.relevantTile != null && !this.relevantTile.playerAndContent && !playerTile.playerAndContent && hoveredTile.explored) {\n      this.relevantTile = hoveredTile;\n    } else {\n      this.relevantTile = playerTile;\n    }\n  } // getClass(tile) {\n  //   let styleClass = 'tile';\n  //   if (!tile.explored) {\n  //     return 'unexplored-tile'\n  //   }\n  //   switch (tile.contents) {\n  //     case 'player':\n  //       styleClass = 'player-tile'\n  //       break;\n  //     case 'wall':\n  //       styleClass = 'wall-tile'\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   return styleClass;\n  // }\n\n\n  onClick(clickedTile) {\n    if (clickedTile.explored && clickedTile.walkable) {\n      let updateInfoPanel = this.gridMatrix.clickedTile(clickedTile, this.character);\n      this.relevantTile = clickedTile;\n    }\n  }\n\n  magnifyLevel(tile) {\n    if (tile.playerOrEnemy()) {\n      if (tile.contents.level == 10) {\n        tile.contents.levelNumberWidth = 24;\n        tile.contents.levelNumberHeight = 20;\n      } else {\n        tile.contents.levelNumberWidth = 12;\n        tile.contents.levelNumberHeight = 20;\n      }\n    }\n\n    if (tile.playerAndContent) {\n      if (this.character.level == 10) {\n        this.character.levelNumberWidth = 24;\n        this.character.levelNumberHeight = 20;\n      } else {\n        this.character.levelNumberWidth = 12;\n        this.character.levelNumberHeight = 20;\n      }\n    }\n  }\n\n  shrinkLevel(tile) {\n    if (tile.playerOrEnemy()) {\n      if (tile.contents.level == 10) {\n        tile.contents.levelNumberWidth = 12;\n        tile.contents.levelNumberHeight = 10;\n      } else {\n        tile.contents.levelNumberWidth = 6;\n        tile.contents.levelNumberHeight = 10;\n      }\n    }\n\n    if (tile.playerAndContent) {\n      if (this.character.level == 10) {\n        this.character.levelNumberWidth = 12;\n        this.character.levelNumberHeight = 10;\n      } else {\n        this.character.levelNumberWidth = 6;\n        this.character.levelNumberHeight = 10;\n      }\n    }\n  }\n\n};\nDungeonComponent = __decorate([Component({\n  selector: 'dungeon',\n  templateUrl: './dungeon.component.html',\n  styleUrls: ['./dungeon.component.css']\n})], DungeonComponent);\nexport { DungeonComponent };","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injectable } from '@angular/core';\r\nimport { Character } from '../models/character';\r\nimport { GridMatrix } from '../models/gridMatrix';\r\nimport { Tile } from '../models/tile';\r\n\r\n\r\n@Component({\r\n  selector: 'dungeon',\r\n  templateUrl: './dungeon.component.html',\r\n  styleUrls: ['./dungeon.component.css']\r\n})\r\nexport class DungeonComponent {\r\n\r\n  items = ['test', 'test2', 'test3', 'test4'];\r\n\r\n  gridMatrix: GridMatrix;\r\n  character: Character;\r\n  relevantTile: Tile;\r\n\r\n  levelNumberWidth = 6;\r\n  levelNumberHeight = 10;\r\n\r\n  constructor(gridMatrix: GridMatrix) {\r\n    this.character = new Character();\r\n    this.gridMatrix = new GridMatrix(this.character);\r\n    this.relevantTile = this.gridMatrix.getPlayerTile();\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n\r\n\r\n\r\n  }\r\n\r\n  tileHovered(hoveredTile) {\r\n    let playerTile = this.gridMatrix.getPlayerTile();\r\n\r\n    if (hoveredTile.hasInfo() && hoveredTile.explored) {\r\n      this.relevantTile = hoveredTile;\r\n    } else if (this.relevantTile != null && !this.relevantTile.playerAndContent && !playerTile.playerAndContent && hoveredTile.explored) {\r\n      this.relevantTile = hoveredTile;\r\n    } else {\r\n      this.relevantTile = playerTile;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // getClass(tile) {\r\n  //   let styleClass = 'tile';\r\n\r\n  //   if (!tile.explored) {\r\n  //     return 'unexplored-tile'\r\n  //   }\r\n\r\n  //   switch (tile.contents) {\r\n  //     case 'player':\r\n  //       styleClass = 'player-tile'\r\n  //       break;\r\n  //     case 'wall':\r\n  //       styleClass = 'wall-tile'\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n\r\n  //   return styleClass;\r\n\r\n  // }\r\n\r\n  onClick(clickedTile) {\r\n\r\n    if (clickedTile.explored && clickedTile.walkable) {\r\n      let updateInfoPanel = this.gridMatrix.clickedTile(clickedTile, this.character);\r\n      this.relevantTile = clickedTile;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  magnifyLevel(tile) {\r\n    if (tile.playerOrEnemy()) {\r\n      if (tile.contents.level == 10) {\r\n        tile.contents.levelNumberWidth = 24;\r\n        tile.contents.levelNumberHeight = 20;\r\n      } else {\r\n        tile.contents.levelNumberWidth = 12;\r\n        tile.contents.levelNumberHeight = 20;\r\n      }\r\n    }\r\n    if (tile.playerAndContent) {\r\n      if (this.character.level == 10) {\r\n        this.character.levelNumberWidth = 24;\r\n        this.character.levelNumberHeight = 20;\r\n      } else {\r\n        this.character.levelNumberWidth = 12;\r\n        this.character.levelNumberHeight = 20;\r\n      }\r\n    }\r\n  }\r\n\r\n  shrinkLevel(tile) {\r\n    if (tile.playerOrEnemy()) {\r\n      if (tile.contents.level == 10) {\r\n        tile.contents.levelNumberWidth = 12;\r\n        tile.contents.levelNumberHeight = 10;\r\n      } else {\r\n        tile.contents.levelNumberWidth = 6;\r\n        tile.contents.levelNumberHeight = 10;\r\n      }\r\n    }\r\n    if (tile.playerAndContent) {\r\n      if (this.character.level == 10) {\r\n        this.character.levelNumberWidth = 12;\r\n        this.character.levelNumberHeight = 10;\r\n      } else {\r\n        this.character.levelNumberWidth = 6;\r\n        this.character.levelNumberHeight = 10;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}