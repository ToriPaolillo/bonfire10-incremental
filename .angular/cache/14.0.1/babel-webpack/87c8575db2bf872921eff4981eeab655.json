{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let Spell = /*#__PURE__*/(() => {\n  class Spell {\n    constructor(name) {\n      this.toggleOn = false;\n      this.targetFirstClick = false;\n      this.spellBeingClickedSuccess = false;\n      this.spellBeingClickedFail = false;\n\n      switch (name) {\n        case 'fireBall':\n          this.name = 'Fire Ball';\n          this.pngString = 'G_Fireball';\n          this.description = 'TARGET: Hits a monster with a fireball, causing 4 points of damage per player level';\n          this.manaCost = 6;\n          this.fontSize = 44;\n          this.type = 'target';\n          break;\n\n        case 'poison':\n          this.name = 'Poison';\n          this.pngString = 'G_Poison';\n          this.description = \"TARGET: Inflicts a monster with poison, preventing it from regenerating health as you explore. Will wear off if they're attacked. Undead are immune.\";\n          this.manaCost = 5;\n          this.fontSize = 50;\n          this.type = 'target';\n          break;\n\n        case 'bloodMagic':\n          this.name = 'Blood Magic';\n          this.pngString = 'G_Blood';\n          this.description = 'TOGGLE: while active, exploration regenerates twice as much mana but no health';\n          this.manaCost = 0;\n          this.fontSize = 42;\n          this.type = 'toggle';\n          break;\n\n        case 'might':\n          this.name = 'Might';\n          this.pngString = 'G_Might';\n          this.description = 'CAST: Gain +30% damage bonus for next physical attack';\n          this.manaCost = 2;\n          this.fontSize = 50;\n          this.type = 'cast';\n          break;\n\n        case 'deathDefy':\n          this.name = 'Death Defy';\n          this.pngString = 'G_KillProtect';\n          this.description = 'CAST: Gain Death Defiance (the next fatal attack will instead only reduce your health to 1)';\n          this.manaCost = 10;\n          this.fontSize = 40;\n          this.type = 'cast';\n          break;\n\n        case 'destroyWall':\n          this.name = 'Destroy Wall';\n          this.pngString = 'G_Endwall';\n          this.description = 'TARGET: Destroys a wall tile';\n          this.manaCost = 8;\n          this.fontSize = 40;\n          this.type = 'target';\n          break;\n\n        case 'firstStrike':\n          this.name = 'First Strike';\n          this.pngString = 'G_FirstStrike';\n          this.description = 'CAST: Gain First Strike for the next physical attack';\n          this.manaCost = 3;\n          this.fontSize = 40;\n          this.type = 'cast';\n          break;\n\n        case 'heal':\n          this.name = 'Heal';\n          this.pngString = 'G_Heal';\n          this.description = 'CAST: Heals 3 HP per player level';\n          this.manaCost = 3;\n          this.fontSize = 50;\n          this.type = 'cast';\n          break;\n\n        case 'petrify':\n          this.name = 'Petrify';\n          this.pngString = 'G_Petrify';\n          this.description = 'TARGET: Turns an enemy to stone. (no exp is gained)';\n          this.manaCost = 5;\n          this.fontSize = 50;\n          this.type = 'target';\n          break;\n\n        case 'reveal':\n          this.name = 'Reveal';\n          this.pngString = 'G_Reveal';\n          this.description = 'CAST: Reveals 3 random unrevealed tiles';\n          this.manaCost = 3;\n          this.fontSize = 50;\n          this.type = 'cast';\n          break;\n\n        case 'teleportMonster':\n          this.name = 'Teleport Monster';\n          this.pngString = 'G_TeleMonster';\n          this.description = 'TARGET: Teleports monster to a random tile';\n          this.manaCost = 10;\n          this.fontSize = 40;\n          this.type = 'target';\n          break;\n\n        case 'teleport':\n          this.name = 'Teleport';\n          this.pngString = 'G_TeleSelf';\n          this.description = 'CAST: Teleports you to a random tile';\n          this.manaCost = 6;\n          this.fontSize = 46;\n          this.type = 'cast';\n          break;\n\n        case 'summon':\n          this.name = 'Summon';\n          this.pngString = 'G_Summon';\n          this.description = 'CAST: Summmons a random monster of your current level (if one exists)';\n          this.manaCost = 6;\n          this.fontSize = 50;\n          this.type = 'cast';\n          break;\n\n        default:\n          this.name = 'empty';\n          this.pngString = 'G_Empty';\n          this.description = '';\n          this.manaCost = 0;\n          this.fontSize = 20;\n          break;\n      }\n    }\n\n    activateSpell(character, enemy) {\n      switch (this.name) {\n        case 'Fire Ball':\n          this.targetFirstClick = false;\n          enemy.currentHealth -= 4 * character.level;\n          break;\n\n        case 'Poison':\n          this.targetFirstClick = false;\n          break;\n\n        case 'Blood Magic':\n          character.bloodMagic = !character.bloodMagic;\n          break;\n\n        case 'Might':\n          character.strongStrike = true;\n          break;\n\n        case 'Death Defy':\n          character.deathDefiance = true;\n          break;\n\n        case 'Destroy Wall':\n          this.targetFirstClick = false;\n          break;\n\n        case 'First Strike':\n          character.firstStrike = true;\n          break;\n\n        case 'Heal':\n          character.currentHealth += 3 * character.level;\n          character.currentHealth > character.getMaxHealth() ? character.currentHealth = character.getMaxHealth() : null;\n          break;\n\n        case 'Petrify':\n          this.targetFirstClick = false;\n          break;\n\n        case 'Reveal':\n          break;\n\n        case 'Teleport Monster':\n          this.targetFirstClick = false;\n          break;\n\n        case 'Teleport':\n          break;\n\n        case 'Summon':\n          break;\n\n        default:\n          break;\n      }\n\n      character.currentMana -= this.manaCost;\n    }\n\n    canCast(character) {\n      let canCast = false;\n\n      if (character.currentMana >= this.manaCost) {\n        if (this.name == 'Heal') {\n          character.currentHealth == character.getMaxHealth() ? canCast = false : canCast = true;\n        } else {\n          canCast = true;\n        }\n      }\n\n      return canCast;\n    }\n\n    predictSpellUse(character, targetOnly) {\n      if (this.canCast(character) && targetOnly) {\n        return (character.currentMana - this.manaCost) / character.baseMana;\n      }\n\n      return character.currentMana / character.baseMana;\n    }\n\n  }\n\n  Spell.ɵfac = function Spell_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  Spell.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Spell,\n    factory: Spell.ɵfac\n  });\n  return Spell;\n})();","map":{"version":3,"sources":["C:\\Users\\Owner\\Documents\\GitHub\\bonfire10-incremental\\src\\app\\models\\spell.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Character } from \"./character\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Tile } from \"./tile\";\r\n\r\n@Injectable()\r\nexport class Spell {\r\n  name: string;\r\n  pngString: string;\r\n  description: string;\r\n  manaCost: number;\r\n  fontSize: number;\r\n  type: string;\r\n  spellBeingClickedSuccess: boolean;\r\n  spellBeingClickedFail: boolean;\r\n  toggleOn: boolean = false;\r\n  targetFirstClick: boolean = false;\r\n\r\n\r\n\r\n  constructor(name: string) {\r\n    this.spellBeingClickedSuccess = false;\r\n    this.spellBeingClickedFail = false;\r\n\r\n    switch (name) {\r\n      case 'fireBall':\r\n        this.name = 'Fire Ball';\r\n        this.pngString = 'G_Fireball';\r\n        this.description = 'TARGET: Hits a monster with a fireball, causing 4 points of damage per player level';\r\n        this.manaCost = 6;\r\n        this.fontSize = 44;\r\n        this.type = 'target';\r\n        break;\r\n      case 'poison':\r\n        this.name = 'Poison';\r\n        this.pngString = 'G_Poison';\r\n        this.description = \"TARGET: Inflicts a monster with poison, preventing it from regenerating health as you explore. Will wear off if they're attacked. Undead are immune.\";\r\n        this.manaCost = 5;\r\n        this.fontSize = 50;\r\n        this.type = 'target';\r\n        break;\r\n      case 'bloodMagic':\r\n        this.name = 'Blood Magic';\r\n        this.pngString = 'G_Blood';\r\n        this.description = 'TOGGLE: while active, exploration regenerates twice as much mana but no health';\r\n        this.manaCost = 0;\r\n        this.fontSize = 42;\r\n        this.type = 'toggle';\r\n        break;\r\n      case 'might':\r\n        this.name = 'Might';\r\n        this.pngString = 'G_Might';\r\n        this.description = 'CAST: Gain +30% damage bonus for next physical attack';\r\n        this.manaCost = 2;\r\n        this.fontSize = 50;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'deathDefy':\r\n        this.name = 'Death Defy';\r\n        this.pngString = 'G_KillProtect';\r\n        this.description = 'CAST: Gain Death Defiance (the next fatal attack will instead only reduce your health to 1)';\r\n        this.manaCost = 10;\r\n        this.fontSize = 40;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'destroyWall':\r\n        this.name = 'Destroy Wall';\r\n        this.pngString = 'G_Endwall';\r\n        this.description = 'TARGET: Destroys a wall tile';\r\n        this.manaCost = 8;\r\n        this.fontSize = 40;\r\n        this.type = 'target';\r\n        break;\r\n      case 'firstStrike':\r\n        this.name = 'First Strike';\r\n        this.pngString = 'G_FirstStrike';\r\n        this.description = 'CAST: Gain First Strike for the next physical attack';\r\n        this.manaCost = 3;\r\n        this.fontSize = 40;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'heal':\r\n        this.name = 'Heal';\r\n        this.pngString = 'G_Heal';\r\n        this.description = 'CAST: Heals 3 HP per player level';\r\n        this.manaCost = 3;\r\n        this.fontSize = 50;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'petrify':\r\n        this.name = 'Petrify';\r\n        this.pngString = 'G_Petrify';\r\n        this.description = 'TARGET: Turns an enemy to stone. (no exp is gained)';\r\n        this.manaCost = 5;\r\n        this.fontSize = 50;\r\n        this.type = 'target';\r\n        break;\r\n      case 'reveal':\r\n        this.name = 'Reveal';\r\n        this.pngString = 'G_Reveal';\r\n        this.description = 'CAST: Reveals 3 random unrevealed tiles';\r\n        this.manaCost = 3;\r\n        this.fontSize = 50;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'teleportMonster':\r\n        this.name = 'Teleport Monster';\r\n        this.pngString = 'G_TeleMonster';\r\n        this.description = 'TARGET: Teleports monster to a random tile';\r\n        this.manaCost = 10;\r\n        this.fontSize = 40;\r\n        this.type = 'target';\r\n        break;\r\n      case 'teleport':\r\n        this.name = 'Teleport';\r\n        this.pngString = 'G_TeleSelf';\r\n        this.description = 'CAST: Teleports you to a random tile';\r\n        this.manaCost = 6;\r\n        this.fontSize = 46;\r\n        this.type = 'cast';\r\n        break;\r\n      case 'summon':\r\n        this.name = 'Summon';\r\n        this.pngString = 'G_Summon';\r\n        this.description = 'CAST: Summmons a random monster of your current level (if one exists)';\r\n        this.manaCost = 6;\r\n        this.fontSize = 50;\r\n        this.type = 'cast';\r\n        break;\r\n      default:\r\n        this.name = 'empty';\r\n        this.pngString = 'G_Empty';\r\n        this.description = '';\r\n        this.manaCost = 0;\r\n        this.fontSize = 20;\r\n        break;\r\n    }\r\n  }\r\n\r\n  activateSpell(character: Character, enemy?: Enemy) {\r\n    switch (this.name) {\r\n      case 'Fire Ball':\r\n        this.targetFirstClick = false;\r\n        enemy.currentHealth -= 4 * character.level\r\n\r\n        break;\r\n      case 'Poison':\r\n        this.targetFirstClick = false;\r\n        break;\r\n      case 'Blood Magic':\r\n        character.bloodMagic = !character.bloodMagic;\r\n        break;\r\n      case 'Might':\r\n        character.strongStrike = true;\r\n        break;\r\n      case 'Death Defy':\r\n        character.deathDefiance = true;\r\n        break;\r\n      case 'Destroy Wall':\r\n        this.targetFirstClick = false;\r\n\r\n        break;\r\n      case 'First Strike':\r\n        character.firstStrike = true;\r\n        break;\r\n      case 'Heal':\r\n        character.currentHealth += 3 * character.level;\r\n        character.currentHealth > character.getMaxHealth() ? character.currentHealth = character.getMaxHealth() : null;\r\n        break;\r\n      case 'Petrify':\r\n        this.targetFirstClick = false;\r\n\r\n        break;\r\n      case 'Reveal':\r\n\r\n        break;\r\n      case 'Teleport Monster':\r\n        this.targetFirstClick = false;\r\n\r\n        break;\r\n      case 'Teleport':\r\n\r\n        break;\r\n      case 'Summon':\r\n\r\n        break;\r\n      default:\r\n\r\n        break;\r\n    }\r\n    character.currentMana -= this.manaCost;\r\n  }\r\n\r\n  canCast(character: Character) {\r\n    let canCast = false;\r\n    if (character.currentMana >= this.manaCost) {\r\n      if (this.name == 'Heal') {\r\n        character.currentHealth == character.getMaxHealth() ? canCast = false : canCast = true\r\n      } else {\r\n        canCast = true\r\n      }\r\n    }\r\n    return canCast;\r\n  }\r\n\r\n  predictSpellUse(character: Character, targetOnly?: boolean) {\r\n    if (this.canCast(character) && targetOnly) {\r\n      return (character.currentMana - this.manaCost) / character.baseMana\r\n    }\r\n    return character.currentMana / character.baseMana;\r\n  }\r\n\r\n\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}