{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Character } from '../models/character';\nimport { GridMatrix } from '../models/gridMatrix';\nlet DungeonComponent = class DungeonComponent {\n  constructor(gridMatrix) {\n    this.items = ['test', 'test2', 'test3', 'test4'];\n    this.character = new Character();\n    this.gridMatrix = new GridMatrix(this.character);\n  }\n\n  ngOnInit() {\n    let that = this;\n  }\n\n  getClass(tile) {\n    let styleClass = 'tile';\n\n    if (!tile.explored) {\n      return 'unexplored-tile';\n    }\n\n    switch (tile.contents) {\n      case 'player':\n        styleClass = 'player-tile';\n        break;\n\n      case 'wall':\n        styleClass = 'wall-tile';\n        break;\n\n      default:\n        break;\n    }\n\n    return styleClass;\n  }\n\n  onClick(clickedTile) {\n    if (clickedTile.explored && clickedTile.walkable) {\n      this.gridMatrix.clickedTile(clickedTile, this.character);\n    }\n  }\n\n  getImage(tile) {\n    let returnString = '';\n\n    if (tile.contents != null) {\n      switch (tile.contents) {\n        case 'wall':\n          returnString = 'Wall';\n          break;\n\n        case 'player':\n          returnString = 'HeroBase';\n          break;\n\n        case 'empty':\n          //returnString = 'Dirt'\n          break;\n\n        case 'gold':\n          returnString = 'Gold';\n          break;\n\n        case 'strengthBoost':\n          returnString = 'Attackboost';\n          break;\n\n        case 'healthBoost':\n          returnString = 'HPBoost';\n          break;\n\n        case 'manaBoost':\n          returnString = 'MPBoost';\n          break;\n\n        case 'shop':\n          returnString = 'Shop';\n          break;\n\n        case 'altar':\n          returnString = 'Altar';\n          break;\n\n        case 'healthPotion':\n          returnString = 'HealthPotion';\n          break;\n\n        case 'manaPotion':\n          returnString = 'ManaPotion';\n          break;\n\n        case 'spell':\n          returnString = 'G_Generic';\n          break;\n\n        case 'enemy1':\n          returnString = 'MeatMan';\n          break;\n\n        default:\n          break;\n      }\n\n      if (tile.contents.pngString != null) {\n        returnString = tile.contents.pngString;\n      }\n    }\n\n    return returnString;\n  }\n\n};\nDungeonComponent = __decorate([Component({\n  selector: 'dungeon',\n  templateUrl: './dungeon.component.html',\n  styleUrls: ['./dungeon.component.css']\n})], DungeonComponent);\nexport { DungeonComponent };","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,QAAsC,eAAtC;AACA,SAAS,SAAT,QAA0B,qBAA1B;AACA,SAAS,UAAT,QAA2B,sBAA3B;AAQA,IAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAO3B,EAAA,WAAA,CAAY,UAAZ,EAAkC;AALlC,SAAA,KAAA,GAAQ,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,OAA3B,CAAR;AAME,SAAK,SAAL,GAAiB,IAAI,SAAJ,EAAjB;AACA,SAAK,UAAL,GAAkB,IAAI,UAAJ,CAAe,KAAK,SAApB,CAAlB;AACD;;AAID,EAAA,QAAQ,GAAA;AACN,QAAI,IAAI,GAAG,IAAX;AAID;;AAMD,EAAA,QAAQ,CAAC,IAAD,EAAK;AACX,QAAI,UAAU,GAAG,MAAjB;;AAEA,QAAI,CAAC,IAAI,CAAC,QAAV,EAAoB;AAClB,aAAO,iBAAP;AACD;;AAED,YAAQ,IAAI,CAAC,QAAb;AACE,WAAK,QAAL;AACE,QAAA,UAAU,GAAG,aAAb;AACA;;AACF,WAAK,MAAL;AACE,QAAA,UAAU,GAAG,WAAb;AACA;;AACF;AACE;AARJ;;AAWA,WAAO,UAAP;AAED;;AAED,EAAA,OAAO,CAAC,WAAD,EAAY;AAEjB,QAAI,WAAW,CAAC,QAAZ,IAAwB,WAAW,CAAC,QAAxC,EAAkD;AAChD,WAAK,UAAL,CAAgB,WAAhB,CAA4B,WAA5B,EAAyC,KAAK,SAA9C;AAED;AACF;;AAED,EAAA,QAAQ,CAAC,IAAD,EAAK;AACX,QAAI,YAAY,GAAG,EAAnB;;AACA,QAAI,IAAI,CAAC,QAAL,IAAiB,IAArB,EAA2B;AACzB,cAAQ,IAAI,CAAC,QAAb;AACE,aAAK,MAAL;AACE,UAAA,YAAY,GAAG,MAAf;AACA;;AACF,aAAK,QAAL;AACE,UAAA,YAAY,GAAG,UAAf;AACA;;AACF,aAAK,OAAL;AACE;AACA;;AACF,aAAK,MAAL;AACE,UAAA,YAAY,GAAG,MAAf;AACA;;AACF,aAAK,eAAL;AACE,UAAA,YAAY,GAAG,aAAf;AACA;;AACF,aAAK,aAAL;AACE,UAAA,YAAY,GAAG,SAAf;AACA;;AACF,aAAK,WAAL;AACE,UAAA,YAAY,GAAG,SAAf;AACA;;AACF,aAAK,MAAL;AACE,UAAA,YAAY,GAAG,MAAf;AACA;;AACF,aAAK,OAAL;AACE,UAAA,YAAY,GAAG,OAAf;AACA;;AACF,aAAK,cAAL;AACE,UAAA,YAAY,GAAG,cAAf;AACA;;AACF,aAAK,YAAL;AACE,UAAA,YAAY,GAAG,YAAf;AACA;;AACF,aAAK,OAAL;AACE,UAAA,YAAY,GAAG,WAAf;AACA;;AACF,aAAK,QAAL;AACE,UAAA,YAAY,GAAG,SAAf;AACA;;AAEF;AACE;AA1CJ;;AA4CA,UAAG,IAAI,CAAC,QAAL,CAAc,SAAd,IAA2B,IAA9B,EAAmC;AACjC,QAAA,YAAY,GAAG,IAAI,CAAC,QAAL,CAAc,SAA7B;AACD;AACF;;AACD,WAAO,YAAP;AACD;;AA3G0B,CAA7B;AAAa,gBAAgB,GAAA,UAAA,CAAA,CAL5B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,SADD;AAET,EAAA,WAAW,EAAE,0BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,yBAAD;AAHF,CAAD,CAKmB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["import { Component, Injectable } from '@angular/core';\r\nimport { Character } from '../models/character';\r\nimport { GridMatrix } from '../models/gridMatrix';\r\n\r\n\r\n@Component({\r\n  selector: 'dungeon',\r\n  templateUrl: './dungeon.component.html',\r\n  styleUrls: ['./dungeon.component.css']\r\n})\r\nexport class DungeonComponent {\r\n\r\n  items = ['test', 'test2', 'test3', 'test4'];\r\n\r\n  gridMatrix: GridMatrix;\r\n  character: Character;\r\n\r\n  constructor(gridMatrix: GridMatrix) {\r\n    this.character = new Character();\r\n    this.gridMatrix = new GridMatrix(this.character);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getClass(tile) {\r\n    let styleClass = 'tile';\r\n\r\n    if (!tile.explored) {\r\n      return 'unexplored-tile'\r\n    }\r\n\r\n    switch (tile.contents) {\r\n      case 'player':\r\n        styleClass = 'player-tile'\r\n        break;\r\n      case 'wall':\r\n        styleClass = 'wall-tile'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return styleClass;\r\n\r\n  }\r\n\r\n  onClick(clickedTile) {\r\n\r\n    if (clickedTile.explored && clickedTile.walkable) {\r\n      this.gridMatrix.clickedTile(clickedTile, this.character);\r\n\r\n    }\r\n  }\r\n\r\n  getImage(tile) {\r\n    let returnString = '';\r\n    if (tile.contents != null) {\r\n      switch (tile.contents) {\r\n        case 'wall':\r\n          returnString = 'Wall'\r\n          break;\r\n        case 'player':\r\n          returnString = 'HeroBase'\r\n          break;\r\n        case 'empty':\r\n          //returnString = 'Dirt'\r\n          break;\r\n        case 'gold':\r\n          returnString = 'Gold'\r\n          break;\r\n        case 'strengthBoost':\r\n          returnString = 'Attackboost'\r\n          break;\r\n        case 'healthBoost':\r\n          returnString = 'HPBoost'\r\n          break;\r\n        case 'manaBoost':\r\n          returnString = 'MPBoost'\r\n          break;\r\n        case 'shop':\r\n          returnString = 'Shop'\r\n          break;\r\n        case 'altar':\r\n          returnString = 'Altar'\r\n          break;\r\n        case 'healthPotion':\r\n          returnString = 'HealthPotion'\r\n          break;\r\n        case 'manaPotion':\r\n          returnString = 'ManaPotion'\r\n          break;\r\n        case 'spell':\r\n          returnString = 'G_Generic'\r\n          break;\r\n        case 'enemy1':\r\n          returnString = 'MeatMan'\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      if(tile.contents.pngString != null){\r\n        returnString = tile.contents.pngString;\r\n      }\r\n    }\r\n    return returnString;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}