{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let Altar = /*#__PURE__*/(() => {\n  class Altar {\n    constructor(name, description, cost) {\n      this.name = name;\n      this.description = description;\n      this.cost = cost;\n      this.pngString = 'Altar';\n    }\n\n  }\n\n  Altar.ɵfac = function Altar_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  Altar.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Altar,\n    factory: Altar.ɵfac\n  });\n  return Altar;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10-incremental\\src\\app\\models\\altar.ts"],"names":[],"mappings":";AAGA,WAAa,KAAb;AAAM,QAAO,KAAP,CAAY;AAOhB,IAAA,WAAA,CAAY,IAAZ,EAA2B,WAA3B,EAAiD,IAAjD,EAA8D;AAC5D,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,SAAL,GAAiB,OAAjB;AAED;;AAbe;;;;;;;WAAL,K;AAAK,IAAA,OAAA,EAAL,KAAK,CAAA;;AAAlB,SAAa,KAAb;AAAA","sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class Altar {\r\n  name: string;\r\n  description: string;\r\n  cost: number;\r\n  pngString: string;\r\n\r\n\r\n  constructor(name?: string, description?: string, cost?: number) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.cost = cost;\r\n    this.pngString = 'Altar';\r\n\r\n  }\r\n\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}