{"ast":null,"code":"import { Tile } from \"./tile\";\nimport * as i0 from \"@angular/core\";\nexport let GridMatrix = /*#__PURE__*/(() => {\n  class GridMatrix {\n    //20 by 20\n    constructor() {\n      let tiles = [];\n      tiles.push(new Tile(false, false, false, 'player')); // walkable empty tiles\n\n      for (let i = 0; i < 180; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // Spells\n\n\n      for (let i = 0; i < 5; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // Gold\n\n\n      for (let i = 0; i < 7; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // stat boosts\n\n\n      for (let i = 0; i < 3; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // stores\n\n\n      for (let i = 0; i < 3; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // churches\n\n\n      for (let i = 0; i < 3; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // potions\n\n\n      for (let i = 0; i < 3; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 1\n\n\n      for (let i = 0; i < 10; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 2\n\n\n      for (let i = 0; i < 5; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 3\n\n\n      for (let i = 0; i < 4; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 4, 5, 6, 7, 8\n\n\n      for (let i = 0; i < 3; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 9\n\n\n      for (let i = 0; i < 2; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      } // level 10\n      // explorable wall tiles\n\n\n      for (let i = 0; i < 170; i++) {\n        let newtile = new Tile(false, false, true);\n        tiles.push(newtile);\n      } // unexplorable wall tiles\n\n\n      for (let i = 0; i < 50; i++) {\n        let newtile = new Tile(false, false, true);\n        tiles.push(newtile);\n      }\n\n      let remaining = 400 - tiles.length; // walkable empty tiles\n\n      for (let i = 0; i < remaining; i++) {\n        let newtile = new Tile(false, false, false);\n        tiles.push(newtile);\n      }\n\n      tiles.forEach(tile => {\n        let test = Math.random() * 400;\n        console.log(test);\n      });\n      this.tileArray = tiles;\n    }\n\n  }\n\n  GridMatrix.ɵfac = function GridMatrix_Factory(t) {\n    return new (t || GridMatrix)();\n  };\n\n  GridMatrix.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GridMatrix,\n    factory: GridMatrix.ɵfac\n  });\n  return GridMatrix;\n})();","map":null,"metadata":{},"sourceType":"module"}