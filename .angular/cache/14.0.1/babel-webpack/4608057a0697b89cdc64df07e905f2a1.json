{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../models/gridMatrix\";\nimport * as i2 from \"@angular/common\";\n\nfunction DungeonComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tile_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i_r2, \" \", tile_r1.xCoord, \" \");\n  }\n}\n\nexport let DungeonComponent = /*#__PURE__*/(() => {\n  class DungeonComponent {\n    constructor(gridMatrix) {\n      this.woodAmount = 0;\n      this.woodIncrement = 1;\n      this.items = ['test', 'test2', 'test3', 'test4'];\n      this.gridMatrix = gridMatrix;\n    }\n\n    ngOnInit() {\n      let that = this;\n    }\n\n  }\n\n  DungeonComponent.ɵfac = function DungeonComponent_Factory(t) {\n    return new (t || DungeonComponent)(i0.ɵɵdirectiveInject(i1.GridMatrix));\n  };\n\n  DungeonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DungeonComponent,\n    selectors: [[\"dungeon\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function DungeonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\");\n        i0.ɵɵtemplate(1, DungeonComponent_li_1_Template, 2, 2, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gridMatrix.tileArray);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".resourcePanel[_ngcontent-%COMP%]{border:3px solid black;width:50%;height:100%;display:flex;align-items:center;justify-content:center;text-align:center;margin:1px;padding-bottom:8px;padding-top:8px}.resourceRow[_ngcontent-%COMP%]{width:24%;display:flex}\\n/*# sourceMappingURL=dungeon.component.css.map*/\"]\n  });\n  return DungeonComponent;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.ts","D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.html"],"names":[],"mappings":";;;;;;ACEY,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACJ,IAAA,EAAA,CAAA,YAAA;;;;;;AADI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,CAAA,MAAA,EAAA,GAAA;;;;ADMhB,WAAa,gBAAb;AAAM,QAAO,gBAAP,CAAuB;AAU3B,IAAA,WAAA,CAAY,UAAZ,EAAiC;AARjC,WAAA,UAAA,GAAa,CAAb;AACA,WAAA,aAAA,GAAgB,CAAhB;AAEA,WAAA,KAAA,GAAQ,CAAC,MAAD,EAAQ,OAAR,EAAgB,OAAhB,EAAwB,OAAxB,CAAR;AAME,WAAK,UAAL,GAAkB,UAAlB;AACA;;AAGF,IAAA,QAAQ,GAAA;AACN,UAAI,IAAI,GAAG,IAAX;AAID;;AApB0B;;;qBAAhB,gB,EAAgB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,G;;;UAAhB,gB;AAAgB,IAAA,SAAA,EAAA,CAAA,CAAA,SAAA,CAAA,C;AAAA,IAAA,KAAA,EAAA,C;AAAA,IAAA,IAAA,EAAA,C;AAAA,IAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,C;AAAA,IAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA;ACRrB,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACI,QAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,8BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAGJ,QAAA,EAAA,CAAA,YAAA;;;;AAHyB,QAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,SAAA;;;;;;ADOjC,SAAa,gBAAb;AAAA","sourcesContent":["import { Component, Injectable } from '@angular/core';\r\nimport { GridMatrix } from '../models/gridMatrix';\r\n\r\n\r\n@Component({\r\n  selector: 'dungeon',\r\n  templateUrl: './dungeon.component.html',\r\n  styleUrls: ['./dungeon.component.css']\r\n})\r\nexport class DungeonComponent {\r\n\r\n  woodAmount = 0;\r\n  woodIncrement = 1;\r\n\r\n  items = ['test','test2','test3','test4'];\r\n\r\n  gridMatrix: GridMatrix;\r\n\r\n\r\n  constructor(gridMatrix:GridMatrix) {\r\n    this.gridMatrix = gridMatrix;\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n","\r\n        <ul>\r\n            <li *ngFor=\"let tile of gridMatrix.tileArray; let i = index\">\r\n                {{i}} {{tile.xCoord}}\r\n            </li>\r\n        </ul>\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}