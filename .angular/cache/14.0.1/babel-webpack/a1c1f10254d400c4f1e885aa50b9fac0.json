{"ast":null,"code":"import { Altar } from \"./altar\";\nimport { Character } from \"./character\";\nimport { Enemy } from \"./enemy\";\nimport { Shop } from \"./shop\";\nimport { Spell } from \"./spell\";\nimport * as i0 from \"@angular/core\";\nexport let Tile = /*#__PURE__*/(() => {\n  class Tile {\n    constructor(explored, preview, walkable, contents, xCoord, yCoord) {\n      this.explored = explored;\n      this.preview = preview;\n      this.walkable = walkable;\n      this.contents = contents;\n      this.xCoord = xCoord;\n      this.yCoord = yCoord;\n      this.playerAndContent = false;\n    }\n\n    hasInfo() {\n      if (this.contents != null) {\n        return this.contents instanceof Spell || this.contents instanceof Enemy || this.contents instanceof Shop || this.contents instanceof Altar;\n      }\n\n      return false;\n    }\n\n    canInteractWith() {\n      if (this.contents != null) {\n        return this.contents instanceof Spell || this.contents instanceof Shop || this.contents instanceof Altar;\n      }\n\n      return false;\n    }\n\n    playerOrEnemy() {\n      if (this.contents != null) {\n        return this.contents instanceof Enemy || this.contents instanceof Character;\n      }\n\n      return false;\n    }\n\n    getImage() {\n      let returnString = 'Dirt';\n\n      if (this.contents != null && this.contents.pngString != null && this.contents.pngString != '') {\n        returnString = this.contents.pngString;\n      }\n\n      return returnString;\n    }\n\n  }\n\n  Tile.ɵfac = function Tile_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  Tile.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Tile,\n    factory: Tile.ɵfac\n  });\n  return Tile;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10-incremental\\src\\app\\models\\tile.ts"],"names":[],"mappings":"AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,KAAT,QAAsB,SAAtB;;AAGA,WAAa,IAAb;AAAM,QAAO,IAAP,CAAW;AAUf,IAAA,WAAA,CAAY,QAAZ,EAA+B,OAA/B,EAAiD,QAAjD,EAAoE,QAApE,EAAoF,MAApF,EAAqG,MAArG,EAAoH;AAClH,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,gBAAL,GAAwB,KAAxB;AAED;;AAGD,IAAA,OAAO,GAAA;AACL,UAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AACzB,eAAO,KAAK,QAAL,YAAyB,KAAzB,IAAkC,KAAK,QAAL,YAAyB,KAA3D,IAAoE,KAAK,QAAL,YAAyB,IAA7F,IAAqG,KAAK,QAAL,YAAyB,KAArI;AACD;;AACD,aAAO,KAAP;AACD;;AAED,IAAA,eAAe,GAAA;AACb,UAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AACzB,eAAO,KAAK,QAAL,YAAyB,KAAzB,IAAkC,KAAK,QAAL,YAAyB,IAA3D,IAAmE,KAAK,QAAL,YAAyB,KAAnG;AACD;;AACD,aAAO,KAAP;AACD;;AAED,IAAA,aAAa,GAAA;AACX,UAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AACzB,eAAO,KAAK,QAAL,YAAyB,KAAzB,IAAkC,KAAK,QAAL,YAAyB,SAAlE;AACD;;AACD,aAAO,KAAP;AACD;;AAED,IAAA,QAAQ,GAAA;AACN,UAAI,YAAY,GAAG,MAAnB;;AACA,UAAI,KAAK,QAAL,IAAiB,IAAjB,IAAyB,KAAK,QAAL,CAAc,SAAd,IAA2B,IAApD,IAA4D,KAAK,QAAL,CAAc,SAAd,IAA2B,EAA3F,EAA+F;AAE7F,QAAA,YAAY,GAAG,KAAK,QAAL,CAAc,SAA7B;AACD;;AAED,aAAO,YAAP;AACD;;AAnDc;;;;;;;WAAJ,I;AAAI,IAAA,OAAA,EAAJ,IAAI,CAAA;;AAAjB,SAAa,IAAb;AAAA","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Altar } from \"./altar\";\r\nimport { Character } from \"./character\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Shop } from \"./shop\";\r\nimport { Spell } from \"./spell\";\r\n\r\n@Injectable()\r\nexport class Tile {\r\n  explored: boolean;\r\n  preview: boolean;\r\n  walkable: boolean;\r\n  contents: any;\r\n  xCoord: number;\r\n  yCoord: number;\r\n  playerAndContent: boolean\r\n\r\n\r\n  constructor(explored: boolean, preview: boolean, walkable: boolean, contents?: any, xCoord?: number, yCoord?: number) {\r\n    this.explored = explored;\r\n    this.preview = preview;\r\n    this.walkable = walkable;\r\n    this.contents = contents;\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n    this.playerAndContent = false;\r\n\r\n  }\r\n\r\n\r\n  hasInfo(): boolean {\r\n    if (this.contents != null) {\r\n      return this.contents instanceof Spell || this.contents instanceof Enemy || this.contents instanceof Shop || this.contents instanceof Altar\r\n    }\r\n    return false;\r\n  }\r\n\r\n  canInteractWith(): boolean {\r\n    if (this.contents != null) {\r\n      return this.contents instanceof Spell || this.contents instanceof Shop || this.contents instanceof Altar\r\n    }\r\n    return false;\r\n  }\r\n\r\n  playerOrEnemy() {\r\n    if (this.contents != null) {\r\n      return this.contents instanceof Enemy || this.contents instanceof Character;\r\n    }\r\n    return false\r\n  }\r\n\r\n  getImage() {\r\n    let returnString = 'Dirt';\r\n    if (this.contents != null && this.contents.pngString != null && this.contents.pngString != '') {\r\n\r\n      returnString = this.contents.pngString;\r\n    }\r\n\r\n    return returnString;\r\n  }\r\n\r\n\r\n\r\n\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}