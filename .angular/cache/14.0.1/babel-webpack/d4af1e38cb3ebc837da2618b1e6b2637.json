{"ast":null,"code":"import { Altar } from \"./altar\";\nimport { Character } from \"./character\";\nimport { Enemy } from \"./enemy\";\nimport { Shop } from \"./shop\";\nimport { Spell } from \"./spell\";\nimport * as i0 from \"@angular/core\";\nexport let Tile = /*#__PURE__*/(() => {\n  class Tile {\n    constructor(explored, preview, walkable, contents, xCoord, yCoord) {\n      this.explored = explored;\n      this.preview = preview;\n      this.walkable = walkable;\n      this.contents = contents;\n      this.xCoord = xCoord;\n      this.yCoord = yCoord;\n      this.playerAndContent = false;\n    }\n\n    hasInfo() {\n      if (this.contents != null) {\n        return this.contents instanceof Spell || this.contents instanceof Enemy || this.contents instanceof Shop || this.contents instanceof Altar;\n      }\n\n      return false;\n    }\n\n    playerOrEnemy() {\n      if (this.contents != null) {\n        return this.contents instanceof Enemy || this.contents instanceof Character;\n      }\n\n      return false;\n    }\n\n    getImage() {\n      let returnString = '';\n\n      if (this.contents != null) {\n        switch (this.contents) {\n          case 'wall':\n            returnString = 'Wall';\n            break;\n\n          case 'empty':\n            //returnString = 'Dirt'\n            break;\n\n          case 'gold':\n            returnString = 'Gold';\n            break;\n\n          case 'strengthBoost':\n            returnString = 'Attackboost';\n            break;\n\n          case 'healthBoost':\n            returnString = 'HPBoost';\n            break;\n\n          case 'manaBoost':\n            returnString = 'MPBoost';\n            break;\n\n          case 'shop':\n            returnString = 'Shop';\n            break;\n\n          case 'altar':\n            returnString = 'Altar';\n            break;\n\n          case 'healthPotion':\n            returnString = 'HealthPotion';\n            break;\n\n          case 'manaPotion':\n            returnString = 'ManaPotion';\n            break;\n\n          case 'spell':\n            returnString = 'G_Generic';\n            break;\n\n          case 'enemy1':\n            returnString = 'MeatMan';\n            break;\n\n          default:\n            break;\n        }\n\n        if (this.contents.pngString != null) {\n          returnString = this.contents.pngString;\n        }\n      }\n\n      return returnString;\n    }\n\n    magnifyLevel() {\n      if (this.playerOrEnemy()) {\n        this.contents.levelNumberWidth = 12;\n        this.contents.levelNumberHeight = 20;\n      }\n    }\n\n  }\n\n  Tile.ɵfac = function Tile_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  Tile.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Tile,\n    factory: Tile.ɵfac\n  });\n  return Tile;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\models\\tile.ts"],"names":[],"mappings":"AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,KAAT,QAAsB,SAAtB;;AAGA,WAAa,IAAb;AAAM,QAAO,IAAP,CAAW;AAUb,IAAA,WAAA,CAAY,QAAZ,EAA+B,OAA/B,EAAiD,QAAjD,EAAoE,QAApE,EAAoF,MAApF,EAAqG,MAArG,EAAoH;AAClH,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,gBAAL,GAAwB,KAAxB;AAEC;;AAGD,IAAA,OAAO,GAAA;AACL,UAAG,KAAK,QAAL,IAAiB,IAApB,EAAyB;AACvB,eAAO,KAAK,QAAL,YAAyB,KAAzB,IAAkC,KAAK,QAAL,YAAyB,KAA3D,IAAoE,KAAK,QAAL,YAAyB,IAA7F,IAAqG,KAAK,QAAL,YAAyB,KAArI;AACD;;AACD,aAAO,KAAP;AACD;;AAED,IAAA,aAAa,GAAA;AACX,UAAG,KAAK,QAAL,IAAiB,IAApB,EAAyB;AACvB,eAAO,KAAK,QAAL,YAAyB,KAAzB,IAAkC,KAAK,QAAL,YAAyB,SAAlE;AACD;;AACD,aAAO,KAAP;AACD;;AAED,IAAA,QAAQ,GAAA;AACN,UAAI,YAAY,GAAG,EAAnB;;AACA,UAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AACzB,gBAAQ,KAAK,QAAb;AACE,eAAK,MAAL;AACE,YAAA,YAAY,GAAG,MAAf;AACA;;AACF,eAAK,OAAL;AACE;AACA;;AACF,eAAK,MAAL;AACE,YAAA,YAAY,GAAG,MAAf;AACA;;AACF,eAAK,eAAL;AACE,YAAA,YAAY,GAAG,aAAf;AACA;;AACF,eAAK,aAAL;AACE,YAAA,YAAY,GAAG,SAAf;AACA;;AACF,eAAK,WAAL;AACE,YAAA,YAAY,GAAG,SAAf;AACA;;AACF,eAAK,MAAL;AACE,YAAA,YAAY,GAAG,MAAf;AACA;;AACF,eAAK,OAAL;AACE,YAAA,YAAY,GAAG,OAAf;AACA;;AACF,eAAK,cAAL;AACE,YAAA,YAAY,GAAG,cAAf;AACA;;AACF,eAAK,YAAL;AACE,YAAA,YAAY,GAAG,YAAf;AACA;;AACF,eAAK,OAAL;AACE,YAAA,YAAY,GAAG,WAAf;AACA;;AACF,eAAK,QAAL;AACE,YAAA,YAAY,GAAG,SAAf;AACA;;AAEF;AACE;AAvCJ;;AAyCA,YAAI,KAAK,QAAL,CAAc,SAAd,IAA2B,IAA/B,EAAqC;AACnC,UAAA,YAAY,GAAG,KAAK,QAAL,CAAc,SAA7B;AACD;AACF;;AACD,aAAO,YAAP;AACD;;AAED,IAAA,YAAY,GAAA;AACV,UAAG,KAAK,aAAL,EAAH,EAAwB;AACtB,aAAK,QAAL,CAAc,gBAAd,GAAiC,EAAjC;AACA,aAAK,QAAL,CAAc,iBAAd,GAAkC,EAAlC;AACD;AACF;;AA5FU;;;;;;;WAAJ,I;AAAI,IAAA,OAAA,EAAJ,IAAI,CAAA;;AAAjB,SAAa,IAAb;AAAA","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Altar } from \"./altar\";\r\nimport { Character } from \"./character\";\r\nimport { Enemy } from \"./enemy\";\r\nimport { Shop } from \"./shop\";\r\nimport { Spell } from \"./spell\";\r\n\r\n@Injectable()\r\nexport class Tile { \r\n    explored: boolean;\r\n    preview: boolean;\r\n    walkable: boolean;\r\n    contents: any;\r\n    xCoord: number;\r\n    yCoord: number;\r\n    playerAndContent: boolean\r\n\r\n\r\n    constructor(explored: boolean, preview: boolean, walkable: boolean, contents?: any, xCoord?: number, yCoord?: number ) {\r\n      this.explored = explored;\r\n      this.preview = preview;\r\n      this.walkable = walkable;\r\n      this.contents = contents;\r\n      this.xCoord = xCoord;\r\n      this.yCoord = yCoord;\r\n      this.playerAndContent = false;\r\n\r\n      }\r\n\r\n\r\n      hasInfo(): boolean{\r\n        if(this.contents != null){\r\n          return this.contents instanceof Spell || this.contents instanceof Enemy || this.contents instanceof Shop || this.contents instanceof Altar\r\n        }\r\n        return false;\r\n      }\r\n\r\n      playerOrEnemy(){\r\n        if(this.contents != null){\r\n          return this.contents instanceof Enemy || this.contents instanceof Character;\r\n        }\r\n        return false\r\n      }\r\n\r\n      getImage() {\r\n        let returnString = '';\r\n        if (this.contents != null) {\r\n          switch (this.contents) {\r\n            case 'wall':\r\n              returnString = 'Wall'\r\n              break;\r\n            case 'empty':\r\n              //returnString = 'Dirt'\r\n              break;\r\n            case 'gold':\r\n              returnString = 'Gold'\r\n              break;\r\n            case 'strengthBoost':\r\n              returnString = 'Attackboost'\r\n              break;\r\n            case 'healthBoost':\r\n              returnString = 'HPBoost'\r\n              break;\r\n            case 'manaBoost':\r\n              returnString = 'MPBoost'\r\n              break;\r\n            case 'shop':\r\n              returnString = 'Shop'\r\n              break;\r\n            case 'altar':\r\n              returnString = 'Altar'\r\n              break;\r\n            case 'healthPotion':\r\n              returnString = 'HealthPotion'\r\n              break;\r\n            case 'manaPotion':\r\n              returnString = 'ManaPotion'\r\n              break;\r\n            case 'spell':\r\n              returnString = 'G_Generic'\r\n              break;\r\n            case 'enemy1':\r\n              returnString = 'MeatMan'\r\n              break;\r\n    \r\n            default:\r\n              break;\r\n          }\r\n          if (this.contents.pngString != null) {\r\n            returnString = this.contents.pngString;\r\n          }\r\n        }\r\n        return returnString;\r\n      }\r\n\r\n      magnifyLevel(){\r\n        if(this.playerOrEnemy()){\r\n          this.contents.levelNumberWidth = 12;\r\n          this.contents.levelNumberHeight = 20;\r\n        }\r\n      }\r\n    \r\n\r\n} "],"sourceRoot":""},"metadata":{},"sourceType":"module"}