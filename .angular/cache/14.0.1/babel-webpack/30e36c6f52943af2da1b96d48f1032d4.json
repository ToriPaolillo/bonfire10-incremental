{"ast":null,"code":"import { Character } from '../models/character';\nimport { GridMatrix } from '../models/gridMatrix';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../models/gridMatrix\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./infoPanel/infoPanel.component\";\n\nfunction DungeonComponent_div_3_div_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n  }\n\n  if (rf & 2) {\n    const tile_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"src\", \"assets/images/default/\" + ctx_r6.getImage(tile_r4) + \".png\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction DungeonComponent_div_3_div_1_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵpropertyInterpolate(\"src\", \"assets/images/default/HeroBase.png\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction DungeonComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵlistener(\"click\", function DungeonComponent_div_3_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const tile_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onClick(tile_r4));\n    });\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵtemplate(2, DungeonComponent_div_3_div_1_img_2_Template, 1, 1, \"img\", 9);\n    i0.ɵɵtemplate(3, DungeonComponent_div_3_div_1_img_3_Template, 1, 1, \"img\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tile_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.getClass(tile_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", \"assets/images/default/Dirt.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"onmouseover\", ctx_r3.tileHovered(tile_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tile_r4.contents != null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tile_r4.playerAndContent);\n  }\n}\n\nfunction DungeonComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, DungeonComponent_div_3_div_1_Template, 4, 5, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gridMatrix.tileArray[i_r2]);\n  }\n}\n\nexport let DungeonComponent = /*#__PURE__*/(() => {\n  class DungeonComponent {\n    constructor(gridMatrix) {\n      this.items = ['test', 'test2', 'test3', 'test4'];\n      this.character = new Character();\n      this.gridMatrix = new GridMatrix(this.character);\n      this.relevantTile = null;\n    }\n\n    ngOnInit() {\n      let that = this;\n    }\n\n    tileHovered(tile) {\n      this.relevantTile = tile;\n    }\n\n    getClass(tile) {\n      let styleClass = 'tile';\n\n      if (!tile.explored) {\n        return 'unexplored-tile';\n      }\n\n      switch (tile.contents) {\n        case 'player':\n          styleClass = 'player-tile';\n          break;\n\n        case 'wall':\n          styleClass = 'wall-tile';\n          break;\n\n        default:\n          break;\n      }\n\n      return styleClass;\n    }\n\n    onClick(clickedTile) {\n      if (clickedTile.explored && clickedTile.walkable) {\n        let updateInfoPanel = this.gridMatrix.clickedTile(clickedTile, this.character);\n\n        if (updateInfoPanel) {\n          this.relevantTile = clickedTile;\n        }\n      }\n    }\n\n    getImage(tile) {\n      let returnString = '';\n\n      if (tile.contents != null) {\n        switch (tile.contents) {\n          case 'wall':\n            returnString = 'Wall';\n            break;\n\n          case 'player':\n            returnString = 'HeroBase';\n            break;\n\n          case 'empty':\n            //returnString = 'Dirt'\n            break;\n\n          case 'gold':\n            returnString = 'Gold';\n            break;\n\n          case 'strengthBoost':\n            returnString = 'Attackboost';\n            break;\n\n          case 'healthBoost':\n            returnString = 'HPBoost';\n            break;\n\n          case 'manaBoost':\n            returnString = 'MPBoost';\n            break;\n\n          case 'shop':\n            returnString = 'Shop';\n            break;\n\n          case 'altar':\n            returnString = 'Altar';\n            break;\n\n          case 'healthPotion':\n            returnString = 'HealthPotion';\n            break;\n\n          case 'manaPotion':\n            returnString = 'ManaPotion';\n            break;\n\n          case 'spell':\n            returnString = 'G_Generic';\n            break;\n\n          case 'enemy1':\n            returnString = 'MeatMan';\n            break;\n\n          default:\n            break;\n        }\n\n        if (tile.contents.pngString != null) {\n          returnString = tile.contents.pngString;\n        }\n      }\n\n      return returnString;\n    }\n\n  }\n\n  DungeonComponent.ɵfac = function DungeonComponent_Factory(t) {\n    return new (t || DungeonComponent)(i0.ɵɵdirectiveInject(i1.GridMatrix));\n  };\n\n  DungeonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DungeonComponent,\n    selectors: [[\"dungeon\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[2, \"position\", \"absolute\", \"top\", \"0px\", \"right\", \"0px\", \"bottom\", \"0px\", \"left\", \"0px\"], [2, \"border\", \"2px solid white\", \"width\", \"1164px\", \"height\", \"804px\"], [2, \"float\", \"left\"], [\"class\", \"tileRow noselect\", 4, \"ngFor\", \"ngForOf\"], [3, \"character\", \"relevantTile\"], [1, \"tileRow\", \"noselect\"], [\"class\", \"tile noselect\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"tile\", \"noselect\", 3, \"ngClass\", \"click\"], [\"width\", \"40\", \"height\", \"40\", 1, \"backgroundImage\", \"noselect\", 3, \"src\", \"onmouseover\"], [\"class\", \"topImage noselect\", \"width\", \"40\", \"height\", \"40\", 3, \"src\", 4, \"ngIf\"], [\"width\", \"40\", \"height\", \"40\", 1, \"topImage\", \"noselect\", 3, \"src\"]],\n    template: function DungeonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, DungeonComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"infoPanel\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gridMatrix.tileArray);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"character\", ctx.character)(\"relevantTile\", ctx.relevantTile);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.InfoPanelComponent],\n    styles: [\".noselect[_ngcontent-%COMP%] {\\r\\n    -webkit-touch-callout: none; \\r\\n      -webkit-user-select: none;    \\r\\n              user-select: none; \\r\\n}\\r\\n\\r\\n.resourcePanel[_ngcontent-%COMP%] {\\r\\n    border: 3px solid black;\\r\\n    width: 50%;\\r\\n    height: 100%;\\r\\n\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    text-align: center;\\r\\n    margin: 1px;\\r\\n    padding-bottom: 8px;\\r\\n    padding-top: 8px;\\r\\n}\\r\\n\\r\\n.resourceRow[_ngcontent-%COMP%] {\\r\\n    width: 24%;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.tile[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.player-tile[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.wall-tile[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.unexplored-tile[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    height: 40px;\\r\\n    width: 40px;\\r\\n    background-color: black;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.backgroundImage[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n  }\\r\\n\\r\\n.topImage[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n}\\r\\n\\r\\n.tileRow[_ngcontent-%COMP%]{\\r\\n    height: 40px;\\r\\n    width: 800px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR1bmdlb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQixFQUFFLGVBQWU7TUFDMUMseUJBQXlCLEVBQUUsV0FBVyxFQUNYLG1CQUFtQixFQUNuQiw0QkFBNEIsRUFDNUIsMkJBQTJCO2NBQzlDLGlCQUFpQixFQUFFO2tGQUNpRDtBQUNsRjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1YsWUFBWTs7SUFFWixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLHVCQUF1QjtJQUN2QixXQUFXO0FBQ2Y7O0FBR0E7SUFDSSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87RUFDVDs7QUFFRjtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sT0FBTztBQUNYOztBQUlBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJmaWxlIjoiZHVuZ2Vvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vc2VsZWN0IHtcclxuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqL1xyXG4gICAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAvKiBTYWZhcmkgKi9cclxuICAgICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgLyogS29ucXVlcm9yIEhUTUwgKi9cclxuICAgICAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgLyogT2xkIHZlcnNpb25zIG9mIEZpcmVmb3ggKi9cclxuICAgICAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xyXG4gICAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOyAvKiBOb24tcHJlZml4ZWQgdmVyc2lvbiwgY3VycmVudGx5XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnRlZCBieSBDaHJvbWUsIEVkZ2UsIE9wZXJhIGFuZCBGaXJlZm94ICovXHJcbn1cclxuXHJcbi5yZXNvdXJjZVBhbmVsIHtcclxuICAgIGJvcmRlcjogM3B4IHNvbGlkIGJsYWNrO1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogOHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDhweDtcclxufVxyXG5cclxuLnJlc291cmNlUm93IHtcclxuICAgIHdpZHRoOiAyNCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4udGlsZXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5wbGF5ZXItdGlsZXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi53YWxsLXRpbGV7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4udW5leHBsb3JlZC10aWxle1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG5cclxuLmJhY2tncm91bmRJbWFnZSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIH1cclxuXHJcbi50b3BJbWFnZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG59XHJcblxyXG5cclxuXHJcbi50aWxlUm93e1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgd2lkdGg6IDgwMHB4O1xyXG59Il19 */\"]\n  });\n  return DungeonComponent;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.ts","D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injectable } from '@angular/core';\r\nimport { Character } from '../models/character';\r\nimport { GridMatrix } from '../models/gridMatrix';\r\nimport { Tile } from '../models/tile';\r\n\r\n\r\n@Component({\r\n  selector: 'dungeon',\r\n  templateUrl: './dungeon.component.html',\r\n  styleUrls: ['./dungeon.component.css']\r\n})\r\nexport class DungeonComponent {\r\n\r\n  items = ['test', 'test2', 'test3', 'test4'];\r\n\r\n  gridMatrix: GridMatrix;\r\n  character: Character;\r\n  relevantTile: Tile;\r\n\r\n  constructor(gridMatrix: GridMatrix) {\r\n    this.character = new Character();\r\n    this.gridMatrix = new GridMatrix(this.character);\r\n    this.relevantTile = null;\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n\r\n\r\n\r\n  }\r\n\r\n  tileHovered(tile){\r\n    this.relevantTile = tile;\r\n  }\r\n\r\n\r\n\r\n  getClass(tile) {\r\n    let styleClass = 'tile';\r\n\r\n    if (!tile.explored) {\r\n      return 'unexplored-tile'\r\n    }\r\n\r\n    switch (tile.contents) {\r\n      case 'player':\r\n        styleClass = 'player-tile'\r\n        break;\r\n      case 'wall':\r\n        styleClass = 'wall-tile'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return styleClass;\r\n\r\n  }\r\n\r\n  onClick(clickedTile) {\r\n\r\n    if (clickedTile.explored && clickedTile.walkable) {\r\n      let updateInfoPanel =  this.gridMatrix.clickedTile(clickedTile, this.character);\r\n\r\n      if(updateInfoPanel){\r\n        this.relevantTile = clickedTile;\r\n      }\r\n    }\r\n  }\r\n\r\n  getImage(tile) {\r\n    let returnString = '';\r\n    if (tile.contents != null) {\r\n      switch (tile.contents) {\r\n        case 'wall':\r\n          returnString = 'Wall'\r\n          break;\r\n        case 'player':\r\n          returnString = 'HeroBase'\r\n          break;\r\n        case 'empty':\r\n          //returnString = 'Dirt'\r\n          break;\r\n        case 'gold':\r\n          returnString = 'Gold'\r\n          break;\r\n        case 'strengthBoost':\r\n          returnString = 'Attackboost'\r\n          break;\r\n        case 'healthBoost':\r\n          returnString = 'HPBoost'\r\n          break;\r\n        case 'manaBoost':\r\n          returnString = 'MPBoost'\r\n          break;\r\n        case 'shop':\r\n          returnString = 'Shop'\r\n          break;\r\n        case 'altar':\r\n          returnString = 'Altar'\r\n          break;\r\n        case 'healthPotion':\r\n          returnString = 'HealthPotion'\r\n          break;\r\n        case 'manaPotion':\r\n          returnString = 'ManaPotion'\r\n          break;\r\n        case 'spell':\r\n          returnString = 'G_Generic'\r\n          break;\r\n        case 'enemy1':\r\n          returnString = 'MeatMan'\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      if(tile.contents.pngString != null){\r\n        returnString = tile.contents.pngString;\r\n      }\r\n    }\r\n    return returnString;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div style=\"position:absolute; top:0px; right:0px; bottom:0px; left:0px;\">\r\n    <div style=\"border: 2px solid white; width: 1164px; height: 804px;\">\r\n\r\n        <div style=\"float:left;\">\r\n            <div *ngFor=\"let row of gridMatrix.tileArray; let i = index\" class=\"tileRow noselect\">\r\n                <div *ngFor=\"let tile of gridMatrix.tileArray[i]; let j = index\" class=\"tile noselect\"\r\n                    [ngClass]=\"getClass(tile)\" (click)=\"onClick(tile)\">\r\n                    <!-- <img *ngIf=\"tile.explored\" src='{{ \"assets/images/default/Dirt.png\" }}' class=\"backgroundImage noselect\" width=\"40\" height=\"40\">\r\n        <img *ngIf=\"tile.contents != null && tile.explored\" src='{{ \"assets/images/default/\" + getImage(tile) + \".png\" }}' class=\"topImage noselect\" width=\"40\" height=\"40\"> -->\r\n                    <img src='{{ \"assets/images/default/Dirt.png\" }}' onmouseover=\"{{tileHovered(tile)}}\"\r\n                        class=\"backgroundImage noselect\" width=\"40\" height=\"40\">\r\n                    <img *ngIf=\"tile.contents != null\" src='{{ \"assets/images/default/\" + getImage(tile) + \".png\" }}'\r\n                        class=\"topImage noselect\" width=\"40\" height=\"40\">\r\n                    <img *ngIf=\"tile.playerAndContent\" src='{{ \"assets/images/default/HeroBase.png\" }}'\r\n                        class=\"topImage noselect\" width=\"40\" height=\"40\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <infoPanel [character]=\"character\" [relevantTile]=\"relevantTile\"></infoPanel>\r\n    </div>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}