{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../models/gridMatrix\";\nimport * as i2 from \"@angular/common\";\n\nfunction DungeonComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n\n  if (rf & 2) {\n    const tile_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.getClass(tile_r4));\n  }\n}\n\nfunction DungeonComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, DungeonComponent_div_1_div_1_Template, 1, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gridMatrix.tileArray[i_r2]);\n  }\n}\n\nexport let DungeonComponent = /*#__PURE__*/(() => {\n  class DungeonComponent {\n    constructor(gridMatrix) {\n      this.woodAmount = 0;\n      this.woodIncrement = 1;\n      this.items = ['test', 'test2', 'test3', 'test4'];\n      this.gridMatrix = gridMatrix;\n    }\n\n    ngOnInit() {\n      let that = this;\n    }\n\n    getClass(tile) {\n      let styleClass = 'tile';\n\n      switch (tile.contents) {\n        case 'player':\n          styleClass = 'player-tile';\n          break;\n\n        case 'wall':\n          styleClass = 'wall-tile';\n          break;\n\n        default:\n          break;\n      }\n\n      return styleClass;\n    }\n\n  }\n\n  DungeonComponent.ɵfac = function DungeonComponent_Factory(t) {\n    return new (t || DungeonComponent)(i0.ɵɵdirectiveInject(i1.GridMatrix));\n  };\n\n  DungeonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DungeonComponent,\n    selectors: [[\"dungeon\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"tileRow\", 4, \"ngFor\", \"ngForOf\"], [1, \"tileRow\"], [\"class\", \"tile\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"tile\", 3, \"ngClass\"]],\n    template: function DungeonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\");\n        i0.ɵɵtemplate(1, DungeonComponent_div_1_Template, 2, 1, \"div\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gridMatrix.tileArray);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf],\n    styles: [\".resourcePanel[_ngcontent-%COMP%]{border:3px solid black;width:50%;height:100%;display:flex;align-items:center;justify-content:center;text-align:center;margin:1px;padding-bottom:8px;padding-top:8px}.resourceRow[_ngcontent-%COMP%]{width:24%;display:flex}.tile[_ngcontent-%COMP%]{height:40px;width:40px;border:2px black solid;float:left}.player-tile[_ngcontent-%COMP%]{height:40px;width:40px;color:#ff0;border:2px black solid;float:left}.wall-tile[_ngcontent-%COMP%]{height:40px;width:40px;color:#000;border:2px black solid;float:left}.tileRow[_ngcontent-%COMP%]{height:40px;width:850px;border:2px black solid}\\n/*# sourceMappingURL=dungeon.component.css.map*/\"]\n  });\n  return DungeonComponent;\n})();","map":{"version":3,"sources":["D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.ts","D:\\Documents\\coding\\Incremental_Games\\bonfire10 Incremental\\src\\app\\dungeon\\dungeon.component.html"],"names":[],"mappings":";;;;;;ACEQ,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;;;;;;AAA8E,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA;;;;;;AADlF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEJ,IAAA,EAAA,CAAA,YAAA;;;;;;AAF0B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA,SAAA,CAAA,IAAA,CAAA;;;;ADO9B,WAAa,gBAAb;AAAM,QAAO,gBAAP,CAAuB;AAU3B,IAAA,WAAA,CAAY,UAAZ,EAAkC;AARlC,WAAA,UAAA,GAAa,CAAb;AACA,WAAA,aAAA,GAAgB,CAAhB;AAEA,WAAA,KAAA,GAAQ,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,OAA3B,CAAR;AAME,WAAK,UAAL,GAAkB,UAAlB;AACD;;AAID,IAAA,QAAQ,GAAA;AACN,UAAI,IAAI,GAAG,IAAX;AAID;;AAMD,IAAA,QAAQ,CAAC,IAAD,EAAK;AACX,UAAI,UAAU,GAAG,MAAjB;;AAEA,cAAQ,IAAI,CAAC,QAAb;AACE,aAAK,QAAL;AACE,UAAA,UAAU,GAAG,aAAb;AACA;;AACF,aAAK,MAAL;AACE,UAAA,UAAU,GAAG,WAAb;AACA;;AACF;AACE;AARJ;;AAWA,aAAO,UAAP;AAED;;AA3C0B;;;qBAAhB,gB,EAAgB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,G;;;UAAhB,gB;AAAgB,IAAA,SAAA,EAAA,CAAA,CAAA,SAAA,CAAA,C;AAAA,IAAA,KAAA,EAAA,C;AAAA,IAAA,IAAA,EAAA,C;AAAA,IAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,CAAA,C;AAAA,IAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA;ACT7B,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACI,QAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAIJ,QAAA,EAAA,CAAA,YAAA;;;;AAJyB,QAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,SAAA;;;;;;ADQzB,SAAa,gBAAb;AAAA","sourcesContent":["import { Component, Injectable } from '@angular/core';\r\nimport { GridMatrix } from '../models/gridMatrix';\r\n\r\n\r\n@Component({\r\n  selector: 'dungeon',\r\n  templateUrl: './dungeon.component.html',\r\n  styleUrls: ['./dungeon.component.css']\r\n})\r\nexport class DungeonComponent {\r\n\r\n  woodAmount = 0;\r\n  woodIncrement = 1;\r\n\r\n  items = ['test', 'test2', 'test3', 'test4'];\r\n\r\n  gridMatrix: GridMatrix;\r\n\r\n\r\n  constructor(gridMatrix: GridMatrix) {\r\n    this.gridMatrix = gridMatrix;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getClass(tile) {\r\n    let styleClass = 'tile';\r\n\r\n    switch (tile.contents) {\r\n      case 'player':\r\n        styleClass = 'player-tile'\r\n        break;\r\n      case 'wall':\r\n        styleClass = 'wall-tile'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return styleClass;\r\n\r\n  }\r\n\r\n}\r\n","<ul>\r\n    <div *ngFor=\"let row of gridMatrix.tileArray; let i = index\" class=\"tileRow\">\r\n        <div *ngFor=\"let tile of gridMatrix.tileArray[i]; let j = index\" class=\"tile\" [ngClass]=\"getClass(tile)\">\r\n        </div>\r\n    </div>\r\n</ul>\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}